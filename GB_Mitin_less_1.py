'''
Практическое задание
1) Поработайте с переменными, создайте несколько, выведите на экран, запросите у
пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.
2) Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и
выведите в формате чч:мм:сс. Используйте форматирование строк.
3) Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь
ввёл число 3. Считаем 3 + 33 + 333 = 369.
4) Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
Для решения используйте цикл while и арифметические операции.
5) Запросите у пользователя значения выручки и издержек фирмы. Определите, с каким
финансовым результатом работает фирма (прибыль — выручка больше издержек, или убыток
— издержки больше выручки). Выведите соответствующее сообщение. Если фирма
отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к
выручке). Далее запросите численность сотрудников фирмы и определите прибыль фирмы в
расчете на одного сотрудника.
6) Спортсмен занимается ежедневными пробежками. В первый день его результат составил a
километров. Каждый день спортсмен увеличивал результат на 10 % относительно
предыдущего. Требуется определить номер дня, на который результат спортсмена составит
не менее b километров. Программа должна принимать значения параметров a и b и выводить
одно натуральное число — номер дня.
Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22
Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.
'''
some_var = 123#int(input("input any time in seconds, please: "))
print( f'Time in seconds: {some_var} --> in hh:mm:ss: {some_var//3600:02d}:{(some_var%3600)//60:02d}:{some_var%60:02d}')


#1) Поработайте с переменными, создайте несколько, выведите на экран, запросите у
#пользователя несколько чисел и строк и сохраните в переменные, выведите на экран.
some_list = [1,2,3,'aaa', 'bcd']
print( 'type:' ,type(some_list), 'some_list = ', some_list )

some_dict = {1 : 'a', 2: 'aaa',  3:'bcd'}
print( 'type:' ,type(some_dict), 'some_dict = ', some_dict )

some_str = (input("input you name, please: "))
print( 'type:' ,type(some_str), f'Hello, {some_str}!'  )

some_var = 0.1223
print( 'type:' ,type(some_var), 'some_var = ', some_var )

some_var = int(input("input any number, please: "))
print( 'type:' ,type(some_var), 'some_var = ', some_var )

print('''
2) Пользователь вводит время в секундах. Переведите время в часы, минуты и секунды и
#выведите в формате чч:мм:сс. Используйте форматирование строк.
''')
some_var = int(input("input any time in seconds, please: "))
print( f'Time in seconds: {some_var} --> in hh:mm:ss: {some_var//3600}:{(some_var%3600)//60:2d}:{some_var%60}')

print('''
3) Узнайте у пользователя число n. Найдите сумму чисел n + nn + nnn. Например, пользователь
#ввёл число 3. Считаем 3 + 33 + 333 = 369.
''')
some_var = int(input("input any number 1...9, please: "))
res = [ str(some_var) for i in range(3) ]
res2 = [ int(''.join(res[:i])) for i in range(1,4) ]
result = sum(res2)
print( f'Задание3 сумма чисел: n + nn + nnn: {result}\n' )

print('''
4) Пользователь вводит целое положительное число. Найдите самую большую цифру в числе.
Для решения используйте цикл while и арифметические операции.
''')
some_var = int(input("input any positive number, please: "))
max_dig = 0
for dig in str(some_var):
    if int(dig) > max_dig:
        max_dig = int(dig)
print( f'The biggest digit in input number is: {max_dig}')

print('''
5) Запросите у пользователя значения выручки и издержек фирмы. 
Определите, с каким финансовым результатом работает фирма 
(прибыль — выручка больше издержек, 
 или убыток — издержки больше выручки). Выведите соответствующее сообщение. 
Если фирма отработала с прибылью, вычислите рентабельность выручки (соотношение прибыли к выручке).
Далее запросите численность сотрудников фирмы и определите прибыль фирмы в расчете на одного сотрудника.
''')
firm_profit = float(input('Введите значение выручки фирмы: '))
firm_expensces = float(input('Введите значение издержек фирмы: '))

print('Финансовый результат работы фирмы:')
if firm_profit > firm_expensces:
    print('\tприбыль — выручка больше издержек')
    num_workers = int(input('Введите численность сотрудников фирмы: '))
    print(f'\tприбыль фирмы в расчете на одного сотрудника: = {round((firm_profit-firm_expensces)/num_workers, 2)}\n')
else:
    print('\tубыток — издержки больше выручки\n')

print('''
6) Спортсмен занимается ежедневными пробежками. В первый день его результат составил a
километров. Каждый день спортсмен увеличивал результат на 10 % относительно
предыдущего. Требуется определить номер дня, на который результат спортсмена составит
не менее b километров. Программа должна принимать значения параметров a и b и выводить
одно натуральное число — номер дня.
Например: a = 2, b = 3.
Результат:
1-й день: 2
2-й день: 2,2
3-й день: 2,42
4-й день: 2,66
5-й день: 2,93
6-й день: 3,22
Ответ: на 6-й день спортсмен достиг результата — не менее 3 км.
''')
#start_dist = 2
#aim_dist = 3
start_dist = int(input("Введите начальное расстояние пробежки: "))
aim_dist = int(input("Введите цель, требуемое расстояние пробежки: "))

prev_val = start_dist
def calk_next(numb):
    if not numb:
        return start_dist
    global prev_val
    res = round( (prev_val + 0.1*prev_val), 2)
    prev_val = res
    return res

dist_list = [ calk_next(i) for i in range( int((aim_dist-start_dist)/0.1) ) ]

for i in range( len(dist_list) ):
    print(f'{i+1}-й день: {dist_list[i]}')
    if dist_list[i] >= aim_dist:
        print(f'Ответ: на {i+1}-й день спортсмен достиг результата — не менее {aim_dist} км.')
        break
